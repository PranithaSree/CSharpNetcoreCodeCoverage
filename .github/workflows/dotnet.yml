name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.azure_credentials }} 
        allow-no-subscriptions: true

    - name: Azure App Service Settings
      uses: Azure/appservice-settings@v1
      with:
        app-name: ${{secrets.APP_NAME}}
        app-settings-json: |
          [
            { 
              "name": "UI_Index_Header",
              "value": "GAGGAGGAGGA",
              "slotSetting": false
            }
          ]
      
    - name: Setup Edge
      run:
        |
        sudo apt install software-properties-common apt-transport-https wget
        wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main"
        sudo apt install microsoft-edge-dev

    - name: Setup Chrome
      run:
        |
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        echo Install: Chrome
        sudo dpkg --install google-chrome-stable_current_amd64.deb

    - name: Setup firefox
      run:
        |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6DCF7707EBC211F
        sudo apt-add-repository "deb http://ppa.launchpad.net/ubuntu-mozilla-security/ppa/ubuntu bionic main"
        sudo apt-get update
        sudo apt-get install firefox
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project
#     - name: Restore dependencies
#       run: dotnet restore
#     - name: Build
#       run: dotnet build --no-restore
    
#     - name: Test
#       run: dotnet test --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

#     - name: Copy Coverage To Predictable Location
#       run: cp coverage/**/coverage.cobertura.xml coverage.cobertura.xml
#     - name: Upload API code coverage
#       if: always()
#       uses: actions/upload-artifact@v2
#       with:
#         name: 'api code coverage'
#         path: coverage/**/coverage.cobertura.xml

#     - name: Code Coverage Summary Report
#       uses: irongut/CodeCoverageSummary@v1.2.0
#       with:
#         filename: coverage.cobertura.xml
#         badge: true
#         fail_below_min: true
#         format: markdown
#         hide_branch_rate: false
#         hide_complexity: true
#         indicators: true
#         output: both
#         thresholds: '60 80'

#     - name: Add Coverage PR Comment
#       if: github.event_name == 'pull_request'
#       uses: marocchino/sticky-pull-request-comment@v2
#       with:
#         recreate: true
#         path: code-coverage-results.md
        
#     - name: Test
#       run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover  
#     - name: Codecov
#       uses: codecov/codecov-action@v1
#       with:
#         directory: BuildReports/Coverage/
